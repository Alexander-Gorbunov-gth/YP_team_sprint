name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install linters
        run: pip install flake8 black
      - name: Run flake8
        run: flake8 .
      - name: Run black check
        run: black --check --diff .

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10']
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - name: Install Docker and docker-compose
        run: |
          sudo apt-get update
          sudo apt-get install -y ca-certificates curl
          sudo install -m 0755 -d /etc/apt/keyrings
          sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
          sudo chmod a+r /etc/apt/keyrings/docker.asc
          echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu noble stable" | sudo tee /etc/apt/sources.list.d/docker.list
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
          
          docker --version
          docker compose version

      - name: Start Docker services
        run: docker compose -f docker-compose.tests.yaml up -d
      - name: Wait for services
        run: sleep 10
      - name: Run tests
        run: docker compose -f docker-compose.tests.yaml run tests pytest

  notify:
    name: Notify Telegram
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: always()
    steps:
      - name: Check workflow status
        id: check-status
        run: |
          if [[ '${{ needs.lint.result }}' == 'success' && '${{ needs.test.result }}' == 'success' ]]; then
            echo "status=✅ Success" >> $GITHUB_OUTPUT
          else
            echo "status=❌ Failed" >> $GITHUB_OUTPUT
          fi
      - name: Send notification
        uses: appleboy/telegram-action@v0.0.3
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ${{ steps.check-status.outputs.status }}
            Workflow: ${{ github.workflow }}
            Event: ${{ github.event_name }}
            Details: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
